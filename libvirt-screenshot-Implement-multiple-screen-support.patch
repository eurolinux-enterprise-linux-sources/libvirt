From 800c9b2c1e0347585213ba6895db7cf064cda21c Mon Sep 17 00:00:00 2001
From: Michal Privoznik <mprivozn@redhat.com>
Date: Fri, 26 Aug 2011 16:41:17 +0800
Subject: [PATCH] screenshot: Implement multiple screen support
To: libvir-list@redhat.com

For https://bugzilla.redhat.com/show_bug.cgi?id=710489
RHEL only, requires __com.redhat_qxl_screendump

As RHEL qemu supports taking screenshot of other monitors than the
first one, we can allow libvirt to support this feature too.

Although this command allows screen specification via ID, there is
not a way to assign one to the primary monitor. Therefore, we must
stick to upstream command in case of primary monitor, and use this
new command in other cases.

Conflicts:

	src/qemu/qemu_driver.c
	src/qemu/qemu_monitor.c: multi scree support was added upstream

Signed-off-by: Daniel Veillard <veillard@redhat.com>
---
 src/qemu/qemu_driver.c       | 22 ++++++++++++++++------
 src/qemu/qemu_monitor.c      | 24 ++++++++++++++++--------
 src/qemu/qemu_monitor.h      |  3 ++-
 src/qemu/qemu_monitor_json.c | 24 ++++++++++++++++++++++++
 src/qemu/qemu_monitor_json.h |  4 ++++
 5 files changed, 62 insertions(+), 15 deletions(-)

diff --git a/src/qemu/qemu_driver.c b/src/qemu/qemu_driver.c
index 6848924..eefb6e8 100644
--- a/src/qemu/qemu_driver.c
+++ b/src/qemu/qemu_driver.c
@@ -3351,6 +3351,8 @@ qemuDomainScreenshot(virDomainPtr dom,
     int tmp_fd = -1;
     char *ret = NULL;
     bool unlink_tmp = false;
+    int video_index = 0;
+    const char *video_id = NULL;
 
     virCheckFlags(0, NULL);
 
@@ -3377,12 +3379,16 @@ qemuDomainScreenshot(virDomainPtr dom,
         goto endjob;
     }
 
-    /* Well, even if qemu allows multiple graphic cards, heads, whatever,
-     * screenshot command does not */
-    if (screen) {
+    while (video_index < vm->def->nvideos) {
+        if (screen < vm->def->videos[video_index]->heads)
+            break;
+        screen -= vm->def->videos[video_index]->heads;
+        video_index++;
+    }
+
+    if (video_index == vm->def->nvideos) {
         virReportError(VIR_ERR_INVALID_ARG,
-                       "%s", _("currently is supported only taking "
-                               "screenshots of screen ID 0"));
+                        "%s", _("no such screen"));
         goto endjob;
     }
 
@@ -3399,8 +3405,12 @@ qemuDomainScreenshot(virDomainPtr dom,
 
     virSecurityManagerSetSavedStateLabel(qemu_driver->securityManager, vm->def, tmp);
 
+    if (video_index) {
+        video_id = vm->def->videos[video_index]->info.alias;
+    }
+
     qemuDomainObjEnterMonitor(driver, vm);
-    if (qemuMonitorScreendump(priv->mon, tmp) < 0) {
+    if (qemuMonitorScreendump(priv->mon, tmp, video_id) < 0) {
         qemuDomainObjExitMonitor(driver, vm);
         goto endjob;
     }
diff --git a/src/qemu/qemu_monitor.c b/src/qemu/qemu_monitor.c
index 1f9cd40..cfd09c6 100644
--- a/src/qemu/qemu_monitor.c
+++ b/src/qemu/qemu_monitor.c
@@ -2842,22 +2842,30 @@ int qemuMonitorSendKey(qemuMonitorPtr mon,
 }
 
 int qemuMonitorScreendump(qemuMonitorPtr mon,
-                          const char *file)
+                          const char *file,
+                          const char *id)
 {
     int ret;
 
-    VIR_DEBUG("mon=%p, file=%s", mon, file);
+    VIR_DEBUG("mon=%p, file=%s, id=%s", mon, file, id);
 
     if (!mon) {
-        virReportError(VIR_ERR_INVALID_ARG,"%s",
-                       _("monitor must not be NULL"));
+        virReportError(VIR_ERR_INVALID_ARG, "%s",
+                        _("monitor must not be NULL"));
         return -1;
     }
 
-    if (mon->json)
-        ret = qemuMonitorJSONScreendump(mon, file);
-    else
-        ret = qemuMonitorTextScreendump(mon, file);
+    if (id) {
+        if (mon->json)
+            ret = qemuMonitorJSONScreendumpRH(mon, file, id);
+        else
+            ret = -1;
+    } else {
+        if (mon->json)
+            ret = qemuMonitorJSONScreendump(mon, file);
+        else
+            ret = qemuMonitorTextScreendump(mon, file);
+    }
     return ret;
 }
 
diff --git a/src/qemu/qemu_monitor.h b/src/qemu/qemu_monitor.h
index d4a6469..8ded11d 100644
--- a/src/qemu/qemu_monitor.h
+++ b/src/qemu/qemu_monitor.h
@@ -535,7 +535,8 @@ int qemuMonitorArbitraryCommand(qemuMonitorPtr mon,
 int qemuMonitorInjectNMI(qemuMonitorPtr mon);
 
 int qemuMonitorScreendump(qemuMonitorPtr mon,
-                          const char *file);
+                          const char *file,
+                          const char *id);
 
 int qemuMonitorSendKey(qemuMonitorPtr mon,
                        unsigned int holdtime,
diff --git a/src/qemu/qemu_monitor_json.c b/src/qemu/qemu_monitor_json.c
index cfd7982..c41d664 100644
--- a/src/qemu/qemu_monitor_json.c
+++ b/src/qemu/qemu_monitor_json.c
@@ -3523,6 +3523,30 @@ int qemuMonitorJSONSendKey(qemuMonitorPtr mon,
     return qemuMonitorTextSendKey(mon, holdtime, keycodes, nkeycodes);
 }
 
+int qemuMonitorJSONScreendumpRH(qemuMonitorPtr mon,
+                                const char *file,
+                                const char *id)
+{
+    int ret = -1;
+    virJSONValuePtr cmd, reply = NULL;
+
+    cmd = qemuMonitorJSONMakeCommand("__com.redhat_qxl_screendump",
+                                     "s:filename", file,
+                                     "s:id", id,
+                                     NULL);
+    if (!cmd)
+        return -1;
+
+    ret = qemuMonitorJSONCommand(mon, cmd, &reply);
+
+    if (ret == 0)
+        ret = qemuMonitorJSONCheckError(cmd, reply);
+
+    virJSONValueFree(cmd);
+    virJSONValueFree(reply);
+    return ret;
+}
+
 int qemuMonitorJSONScreendump(qemuMonitorPtr mon,
                               const char *file)
 {
diff --git a/src/qemu/qemu_monitor_json.h b/src/qemu/qemu_monitor_json.h
index b7f608e..e3cd02b 100644
--- a/src/qemu/qemu_monitor_json.h
+++ b/src/qemu/qemu_monitor_json.h
@@ -254,6 +254,10 @@ int qemuMonitorJSONSendKey(qemuMonitorPtr mon,
                            unsigned int *keycodes,
                            unsigned int nkeycodes);
 
+int qemuMonitorJSONScreendumpRH(qemuMonitorPtr mon,
+                                const char *file,
+                                const char *id);
+
 int qemuMonitorJSONScreendump(qemuMonitorPtr mon,
                               const char *file);
 
-- 
1.7.11.4

