From 3eac5d675aeb0243ccf421b1eb982debdd8ffaf7 Mon Sep 17 00:00:00 2001
Message-Id: <3eac5d675aeb0243ccf421b1eb982debdd8ffaf7@dist-git>
From: Michal Privoznik <mprivozn@redhat.com>
Date: Fri, 18 Jul 2014 14:17:39 +0200
Subject: [PATCH] conf: Always format seclabel's model

https://bugzilla.redhat.com/show_bug.cgi?id=1113860

We've always done that. Well, until 990e46c45. Point is, if we don't
format model, we may lose a domain on libvirtd restart. If the
seclabel is implicit however, we should skip it's formatting.

Signed-off-by: Michal Privoznik <mprivozn@redhat.com>

(cherry picked from commit 99c8d2e8087135a57a54f205aabad8e911e53519)

Conflicts:
    src/conf/domain_conf.c: Context, as
    ca6dc7b585f16d15e7c5e58057e72bc1b6f6f766 (the big hardcoded-spaces vs
    virBufferAdjustIndent() rework) is not backported yet.

    tests/qemuxml2xmltest.c: Yet another context, as
    96f62755130d2c9f2aef44ca44555b023c3c0cc8 which adds a new test is not
    backported yet.

Note, that I'm not backporting 13adf1b as doing so brought up so many conflicts
that adjusting the cherry picked commit is way easier.
And I had to leave out 'pci-root' device from the
qemuxml2argv-seclabel-dynamic-none.xml as PCI Root devices are unknown to
libvirt in RHEL-6.
Signed-off-by: Jiri Denemark <jdenemar@redhat.com>
---
 src/conf/domain_conf.c                             | 34 +++++++++++++++-------
 .../qemuxml2argv-seclabel-dynamic-none.xml         | 27 +++++++++++++++++
 tests/qemuxml2xmltest.c                            |  1 +
 3 files changed, 51 insertions(+), 11 deletions(-)
 create mode 100644 tests/qemuxml2argvdata/qemuxml2argv-seclabel-dynamic-none.xml

diff --git a/src/conf/domain_conf.c b/src/conf/domain_conf.c
index e90b08c..877d262 100644
--- a/src/conf/domain_conf.c
+++ b/src/conf/domain_conf.c
@@ -3307,8 +3307,23 @@ virSecurityLabelDefParseXML(xmlXPathContextPtr ctxt,
     /* For the model 'none' none of the following labels is going to be
      * present. Hence, return now. */
 
-    if (STREQ_NULLABLE(def->model, "none"))
+    if (STREQ_NULLABLE(def->model, "none")) {
+        if (flags & VIR_DOMAIN_XML_INACTIVE) {
+            /* Fix older configurations */
+            def->type = VIR_DOMAIN_SECLABEL_NONE;
+            def->norelabel = true;
+        } else {
+            if (def->type != VIR_DOMAIN_SECLABEL_NONE) {
+                virReportError(VIR_ERR_CONFIG_UNSUPPORTED,
+                               _("unsupported type='%s' to model 'none'"),
+                               virDomainSeclabelTypeToString(def->type));
+                goto error;
+            }
+            /* combination of relabel='yes' and type='static'
+             * is checked a few lines above. */
+        }
         return def;
+    }
 
     /* Only parse label, if using static labels, or
      * if the 'live' VM XML is requested
@@ -12334,8 +12349,7 @@ virDomainEventActionDefFormat(virBufferPtr buf,
 
 static void
 virSecurityLabelDefFormat(virBufferPtr buf,
-                          virSecurityLabelDefPtr def,
-                          unsigned flags)
+                          virSecurityLabelDefPtr def)
 {
     const char *sectype = virDomainSeclabelTypeToString(def->type);
 
@@ -12345,19 +12359,17 @@ virSecurityLabelDefFormat(virBufferPtr buf,
     if (def->type == VIR_DOMAIN_SECLABEL_DEFAULT)
         return;
 
-    /* To avoid backward compatibility issues, suppress DAC labels that are
-     * automatically generated.
+    /* To avoid backward compatibility issues, suppress DAC and 'none' labels
+     * that are automatically generated.
      */
-    if (STREQ_NULLABLE(def->model, "dac") && def->implicit)
+    if ((STREQ_NULLABLE(def->model, "dac") ||
+         STREQ_NULLABLE(def->model, "none")) && def->implicit)
         return;
 
     virBufferAsprintf(buf, "<seclabel type='%s'",
                       sectype);
 
-    /* When generating state XML do include the model */
-    if (flags & VIR_DOMAIN_XML_INTERNAL_STATUS ||
-        STRNEQ_NULLABLE(def->model, "none"))
-        virBufferEscapeString(buf, " model='%s'", def->model);
+    virBufferEscapeString(buf, " model='%s'", def->model);
 
     if (def->type == VIR_DOMAIN_SECLABEL_NONE) {
         virBufferAddLit(buf, "/>\n");
@@ -15004,7 +15016,7 @@ virDomainDefFormatInternal(virDomainDefPtr def,
 
     virBufferAdjustIndent(buf, 2);
     for (n = 0; n < def->nseclabels; n++)
-        virSecurityLabelDefFormat(buf, def->seclabels[n], flags);
+        virSecurityLabelDefFormat(buf, def->seclabels[n]);
     virBufferAdjustIndent(buf, -2);
 
     if (def->namespaceData && def->ns.format) {
diff --git a/tests/qemuxml2argvdata/qemuxml2argv-seclabel-dynamic-none.xml b/tests/qemuxml2argvdata/qemuxml2argv-seclabel-dynamic-none.xml
new file mode 100644
index 0000000..e1713ca
--- /dev/null
+++ b/tests/qemuxml2argvdata/qemuxml2argv-seclabel-dynamic-none.xml
@@ -0,0 +1,27 @@
+<domain type='qemu'>
+  <name>QEMUGuest1</name>
+  <uuid>c7a5fdbd-edaf-9455-926a-d65c16db1809</uuid>
+  <memory unit='KiB'>219100</memory>
+  <currentMemory unit='KiB'>219100</currentMemory>
+  <vcpu placement='static' cpuset='1-4,8-20,525'>1</vcpu>
+  <os>
+    <type arch='i686' machine='pc'>hvm</type>
+    <boot dev='hd'/>
+  </os>
+  <clock offset='utc'/>
+  <on_poweroff>destroy</on_poweroff>
+  <on_reboot>restart</on_reboot>
+  <on_crash>destroy</on_crash>
+  <devices>
+    <emulator>/usr/bin/qemu</emulator>
+    <disk type='block' device='disk'>
+      <source dev='/dev/HostVG/QEMUGuest1'/>
+      <target dev='hda' bus='ide'/>
+      <address type='drive' controller='0' bus='0' target='0' unit='0'/>
+    </disk>
+    <controller type='usb' index='0'/>
+    <controller type='ide' index='0'/>
+    <memballoon model='virtio'/>
+  </devices>
+  <seclabel type='none' model='none'/>
+</domain>
diff --git a/tests/qemuxml2xmltest.c b/tests/qemuxml2xmltest.c
index a9f871a..685cbcd 100644
--- a/tests/qemuxml2xmltest.c
+++ b/tests/qemuxml2xmltest.c
@@ -239,6 +239,7 @@ mymain(void)
     DO_TEST_FULL("seclabel-dynamic-relabel", false, WHEN_INACTIVE);
     DO_TEST("seclabel-static");
     DO_TEST("seclabel-none");
+    DO_TEST("seclabel-dynamic-none");
     DO_TEST("numad-static-vcpu-no-numatune");
     DO_TEST("disk-scsi-lun-passthrough-sgio");
 
-- 
2.0.2

