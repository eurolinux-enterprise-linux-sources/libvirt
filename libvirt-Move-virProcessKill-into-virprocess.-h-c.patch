From 03f68617f6d733ebffd12027d5fbab013c1fd45a Mon Sep 17 00:00:00 2001
Message-Id: <03f68617f6d733ebffd12027d5fbab013c1fd45a.1379585484.git.jdenemar@redhat.com>
From: "Daniel P. Berrange" <berrange@redhat.com>
Date: Thu, 12 Sep 2013 17:00:03 +0100
Subject: [PATCH] Move virProcessKill into virprocess.{h, c}

https://bugzilla.redhat.com/show_bug.cgi?id=1006266

There are a number of process related functions spread
across multiple files. Start to consolidate them by
creating a virprocess.{c,h} file

Signed-off-by: Daniel P. Berrange <berrange@redhat.com>
(cherry picked from commit e5e2b65cf86ea49eba76b3c274e3b9d2177485bc)
---
 src/Makefile.am          |  1 +
 src/libvirt_private.syms |  3 ++
 src/qemu/qemu_agent.c    |  1 +
 src/qemu/qemu_monitor.c  |  1 +
 src/qemu/qemu_process.c  |  1 +
 src/uml/uml_driver.c     |  1 +
 src/util/util.c          | 57 --------------------------------
 src/util/util.h          |  2 --
 src/util/virprocess.c    | 84 ++++++++++++++++++++++++++++++++++++++++++++++++
 src/util/virprocess.h    | 31 ++++++++++++++++++
 10 files changed, 123 insertions(+), 59 deletions(-)
 create mode 100644 src/util/virprocess.c
 create mode 100644 src/util/virprocess.h

diff --git a/src/Makefile.am b/src/Makefile.am
index f67cf57..819bd14 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -88,6 +88,7 @@ UTIL_SOURCES =							\
 		util/virnodesuspend.c util/virnodesuspend.h	\
 		util/virobject.c util/virobject.h		\
 		util/virpidfile.c util/virpidfile.h		\
+		util/virprocess.c util/virprocess.h		\
 		util/virtypedparam.c util/virtypedparam.h	\
 		util/xml.c util/xml.h				\
 		util/virterror.c util/virterror_internal.h	\
diff --git a/src/libvirt_private.syms b/src/libvirt_private.syms
index 9114ed2..5312535 100644
--- a/src/libvirt_private.syms
+++ b/src/libvirt_private.syms
@@ -1762,6 +1762,9 @@ virPidFileDelete;
 virPidFileDeletePath;
 
 
+# virprocess.h
+virProcessKill;
+
 # virrandom.h
 virRandom;
 virRandomBits;
diff --git a/src/qemu/qemu_agent.c b/src/qemu/qemu_agent.c
index 7f3fa76..257ec37 100644
--- a/src/qemu/qemu_agent.c
+++ b/src/qemu/qemu_agent.c
@@ -39,6 +39,7 @@
 #include "virterror_internal.h"
 #include "json.h"
 #include "virfile.h"
+#include "virprocess.h"
 #include "virtime.h"
 #include "virobject.h"
 
diff --git a/src/qemu/qemu_monitor.c b/src/qemu/qemu_monitor.c
index eff21f7..e14cd4b 100644
--- a/src/qemu/qemu_monitor.c
+++ b/src/qemu/qemu_monitor.c
@@ -35,6 +35,7 @@
 #include "memory.h"
 #include "logging.h"
 #include "virfile.h"
+#include "virprocess.h"
 #include "virobject.h"
 
 #ifdef WITH_DTRACE_PROBES
diff --git a/src/qemu/qemu_process.c b/src/qemu/qemu_process.c
index a0d231a..c77bb93 100644
--- a/src/qemu/qemu_process.c
+++ b/src/qemu/qemu_process.c
@@ -61,6 +61,7 @@
 #include "locking/domain_lock.h"
 #include "network/bridge_driver.h"
 #include "uuid.h"
+#include "virprocess.h"
 #include "virtime.h"
 #include "virnetdevtap.h"
 #include "bitmap.h"
diff --git a/src/uml/uml_driver.c b/src/uml/uml_driver.c
index 1777069..0c11c4f 100644
--- a/src/uml/uml_driver.c
+++ b/src/uml/uml_driver.c
@@ -63,6 +63,7 @@
 #include "configmake.h"
 #include "virnetdevtap.h"
 #include "virnodesuspend.h"
+#include "virprocess.h"
 #include "viruri.h"
 
 #define VIR_FROM_THIS VIR_FROM_UML
diff --git a/src/util/util.c b/src/util/util.c
index 0d24a05..a6c0d47 100644
--- a/src/util/util.c
+++ b/src/util/util.c
@@ -2317,63 +2317,6 @@ check_and_return:
     return result;
 }
 
-/* send signal to a single process */
-int virProcessKill(pid_t pid, int sig)
-{
-    if (pid <= 1) {
-        errno = ESRCH;
-        return -1;
-    }
-
-#ifdef WIN32
-    /* Mingw / Windows don't have many signals (AFAIK) */
-    switch (sig) {
-    case SIGINT:
-        /* This does a Ctrl+C equiv */
-        if (!GenerateConsoleCtrlEvent(CTRL_C_EVENT, pid)) {
-            errno = ESRCH;
-            return -1;
-        }
-        break;
-
-    case SIGTERM:
-        /* Since TerminateProcess is closer to SIG_KILL, we do
-         * a Ctrl+Break equiv which is more pleasant like the
-         * good old unix SIGTERM/HUP
-         */
-        if (!GenerateConsoleCtrlEvent(CTRL_BREAK_EVENT, pid)) {
-            errno = ESRCH;
-            return -1;
-        }
-        break;
-
-    default:
-    {
-        HANDLE proc;
-        proc = OpenProcess(PROCESS_TERMINATE, FALSE, pid);
-        if (!proc) {
-            errno = ESRCH; /* Not entirely accurate, but close enough */
-            return -1;
-        }
-
-        /*
-         * TerminateProcess is more or less equiv to SIG_KILL, in that
-         * a process can't trap / block it
-         */
-        if (sig != 0 && !TerminateProcess(proc, sig)) {
-            errno = ESRCH;
-            return -1;
-        }
-        CloseHandle(proc);
-    }
-    }
-    return 0;
-#else
-    return kill(pid, sig);
-#endif
-}
-
-
 #ifdef HAVE_GETPWUID_R
 /* Look up fields from the user database for the given user.  On
  * error, set errno, report the error, and return -1.  */
diff --git a/src/util/util.h b/src/util/util.h
index 7c201ce..40c1923 100644
--- a/src/util/util.h
+++ b/src/util/util.h
@@ -255,8 +255,6 @@ static inline int getgid (void) { return 0; }
 
 char *virGetHostname(virConnectPtr conn);
 
-int virProcessKill(pid_t pid, int sig);
-
 char *virGetUserDirectory(void);
 char *virGetUserConfigDirectory(void);
 char *virGetUserCacheDirectory(void);
diff --git a/src/util/virprocess.c b/src/util/virprocess.c
new file mode 100644
index 0000000..e7db68f
--- /dev/null
+++ b/src/util/virprocess.c
@@ -0,0 +1,84 @@
+/*
+ * virprocess.c: interaction with processes
+ *
+ * Copyright (C) 2010-2012 Red Hat, Inc.
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library.  If not, see
+ * <http://www.gnu.org/licenses/>.
+ *
+ */
+
+
+#include <config.h>
+
+#include <signal.h>
+#include <errno.h>
+
+#include "virprocess.h"
+
+/* send signal to a single process */
+int virProcessKill(pid_t pid, int sig)
+{
+    if (pid <= 1) {
+        errno = ESRCH;
+        return -1;
+    }
+
+#ifdef WIN32
+    /* Mingw / Windows don't have many signals (AFAIK) */
+    switch (sig) {
+    case SIGINT:
+        /* This does a Ctrl+C equiv */
+        if (!GenerateConsoleCtrlEvent(CTRL_C_EVENT, pid)) {
+            errno = ESRCH;
+            return -1;
+        }
+        break;
+
+    case SIGTERM:
+        /* Since TerminateProcess is closer to SIG_KILL, we do
+         * a Ctrl+Break equiv which is more pleasant like the
+         * good old unix SIGTERM/HUP
+         */
+        if (!GenerateConsoleCtrlEvent(CTRL_BREAK_EVENT, pid)) {
+            errno = ESRCH;
+            return -1;
+        }
+        break;
+
+    default:
+    {
+        HANDLE proc;
+        proc = OpenProcess(PROCESS_TERMINATE, FALSE, pid);
+        if (!proc) {
+            errno = ESRCH; /* Not entirely accurate, but close enough */
+            return -1;
+        }
+
+        /*
+         * TerminateProcess is more or less equiv to SIG_KILL, in that
+         * a process can't trap / block it
+         */
+        if (sig != 0 && !TerminateProcess(proc, sig)) {
+            errno = ESRCH;
+            return -1;
+        }
+        CloseHandle(proc);
+    }
+    }
+    return 0;
+#else
+    return kill(pid, sig);
+#endif
+}
diff --git a/src/util/virprocess.h b/src/util/virprocess.h
new file mode 100644
index 0000000..b1000c6
--- /dev/null
+++ b/src/util/virprocess.h
@@ -0,0 +1,31 @@
+/*
+ * virprocess.h: interaction with processes
+ *
+ * Copyright (C) 2010-2012 Red Hat, Inc.
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library.  If not, see
+ * <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#ifndef __VIR_PROCESS_H__
+# define __VIR_PROCESS_H__
+
+# include <sys/types.h>
+
+# include "internal.h"
+
+int virProcessKill(pid_t pid, int sig);
+
+#endif /* __VIR_PROCESS_H__ */
-- 
1.8.3.2

