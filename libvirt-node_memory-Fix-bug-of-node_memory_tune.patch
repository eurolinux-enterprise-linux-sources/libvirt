From 127386bf9fddffd3e18d5c345dc64002bd67c965 Mon Sep 17 00:00:00 2001
Message-Id: <127386bf9fddffd3e18d5c345dc64002bd67c965.1354720508.git.jdenemar@redhat.com>
From: Osier Yang <jyang@redhat.com>
Date: Mon, 3 Dec 2012 21:16:37 +0800
Subject: [PATCH] node_memory: Fix bug of node_memory_tune

https://bugzilla.redhat.com/show_bug.cgi?id=872656

The 3 options accept 0, and merely checking for non-zero values
would cause wrong results.
(cherry picked from commit 33f49f211a5e14214c73e573d1f74c5f432094de)
---
 tools/virsh-host.c | 40 ++++++++++++++++++++++------------------
 1 file changed, 22 insertions(+), 18 deletions(-)

diff --git a/tools/virsh-host.c b/tools/virsh-host.c
index 0b1fd5b..ab3b6ab 100644
--- a/tools/virsh-host.c
+++ b/tools/virsh-host.c
@@ -906,35 +906,39 @@ cmdNodeMemoryTune(vshControl *ctl, const vshCmd *cmd)
     unsigned int shm_pages_to_scan = 0;
     unsigned int shm_sleep_millisecs = 0;
     unsigned int shm_merge_across_nodes = 0;
+    bool has_shm_pages_to_scan = false;
+    bool has_shm_sleep_millisecs = false;
+    bool has_shm_merge_across_nodes = false;
     bool ret = false;
+    int rc = -1;
     int i = 0;
 
-    if (vshCommandOptUInt(cmd, "shm-pages-to-scan",
-                          &shm_pages_to_scan) < 0) {
+    if ((rc = vshCommandOptUInt(cmd, "shm-pages-to-scan",
+                                &shm_pages_to_scan)) < 0) {
         vshError(ctl, "%s", _("invalid shm-pages-to-scan number"));
         return false;
+    } else if (rc > 0) {
+        nparams++;
+        has_shm_pages_to_scan = true;
     }
 
-    if (vshCommandOptUInt(cmd, "shm-sleep-millisecs",
-                          &shm_sleep_millisecs) < 0) {
+    if ((rc = vshCommandOptUInt(cmd, "shm-sleep-millisecs",
+                                &shm_sleep_millisecs)) < 0) {
         vshError(ctl, "%s", _("invalid shm-sleep-millisecs number"));
         return false;
+    } else if (rc > 0) {
+        nparams++;
+        has_shm_sleep_millisecs = true;
     }
 
-    if (vshCommandOptUInt(cmd, "shm-merge-across-nodes",
-                          &shm_merge_across_nodes) < 0) {
+    if ((rc = vshCommandOptUInt(cmd, "shm-merge-across-nodes",
+                                &shm_merge_across_nodes)) < 0) {
         vshError(ctl, "%s", _("invalid shm-merge-across-nodes number"));
         return false;
-    }
-
-    if (shm_pages_to_scan)
-        nparams++;
-
-    if (shm_sleep_millisecs)
-        nparams++;
-
-    if (shm_merge_across_nodes)
+    } else if (rc > 0) {
         nparams++;
+        has_shm_merge_across_nodes = true;
+    }
 
     if (nparams == 0) {
         /* Get the number of memory parameters */
@@ -971,7 +975,7 @@ cmdNodeMemoryTune(vshControl *ctl, const vshCmd *cmd)
         /* Set the memory parameters */
         params = vshCalloc(ctl, nparams, sizeof(*params));
 
-        if (i < nparams && shm_pages_to_scan) {
+        if (i < nparams && has_shm_pages_to_scan) {
             if (virTypedParameterAssign(&params[i++],
                                         VIR_NODE_MEMORY_SHARED_PAGES_TO_SCAN,
                                         VIR_TYPED_PARAM_UINT,
@@ -979,7 +983,7 @@ cmdNodeMemoryTune(vshControl *ctl, const vshCmd *cmd)
                 goto error;
         }
 
-        if (i < nparams && shm_sleep_millisecs) {
+        if (i < nparams && has_shm_sleep_millisecs) {
             if (virTypedParameterAssign(&params[i++],
                                         VIR_NODE_MEMORY_SHARED_SLEEP_MILLISECS,
                                         VIR_TYPED_PARAM_UINT,
@@ -987,7 +991,7 @@ cmdNodeMemoryTune(vshControl *ctl, const vshCmd *cmd)
                 goto error;
         }
 
-        if (i < nparams && shm_merge_across_nodes) {
+        if (i < nparams && has_shm_merge_across_nodes) {
             if (virTypedParameterAssign(&params[i++],
                                         VIR_NODE_MEMORY_SHARED_MERGE_ACROSS_NODES,
                                         VIR_TYPED_PARAM_UINT,
-- 
1.8.0

