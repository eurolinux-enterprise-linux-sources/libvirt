From 93974b7798d99a642f1db408067998139c5f75c2 Mon Sep 17 00:00:00 2001
Message-Id: <93974b7798d99a642f1db408067998139c5f75c2@dist-git>
From: Peter Krempa <pkrempa@redhat.com>
Date: Tue, 8 Jul 2014 16:50:31 +0200
Subject: [PATCH] qemu: Factor out body of qemuDomainGetMetadata for universal
 use

https://bugzilla.redhat.com/show_bug.cgi?id=1115039

The function implemented common behavior that can be reused for other
hypervisor drivers that use the virDomainObj data structures. Factor out
the core into a separate helper func.

(cherry picked from commit 99c51af2ee42de980c258ecb52cf20f96c69ff83)

Conflicts:
	src/conf/domain_conf.c
	src/conf/domain_conf.h
	src/qemu/qemu_driver.c

Signed-off-by: Jiri Denemark <jdenemar@redhat.com>
---
 src/conf/domain_conf.c   | 55 ++++++++++++++++++++++++++++++++++++++++++++++++
 src/conf/domain_conf.h   |  6 ++++++
 src/libvirt_private.syms |  1 +
 src/qemu/qemu_driver.c   | 42 ++----------------------------------
 4 files changed, 64 insertions(+), 40 deletions(-)

diff --git a/src/conf/domain_conf.c b/src/conf/domain_conf.c
index 6e5f6b7..e5a93de 100644
--- a/src/conf/domain_conf.c
+++ b/src/conf/domain_conf.c
@@ -16576,3 +16576,58 @@ virDomainDefFindDevice(virDomainDefPtr def,
 
     return 0;
 }
+
+
+char *
+virDomainObjGetMetadata(virDomainObjPtr vm,
+                        int type,
+                        const char *uri ATTRIBUTE_UNUSED,
+                        virCapsPtr caps,
+                        unsigned int flags)
+{
+    virDomainDefPtr def;
+    char *field = NULL;
+    char *ret = NULL;
+
+    virCheckFlags(VIR_DOMAIN_AFFECT_LIVE |
+                  VIR_DOMAIN_AFFECT_CONFIG, NULL);
+
+    if (virDomainLiveConfigHelperMethod(caps, vm, &flags, &def) < 0)
+        goto cleanup;
+
+    /* use correct domain definition according to flags */
+    if (flags & VIR_DOMAIN_AFFECT_LIVE)
+        def = vm->def;
+
+    switch ((virDomainMetadataType) type) {
+    case VIR_DOMAIN_METADATA_DESCRIPTION:
+        field = def->description;
+        break;
+
+    case VIR_DOMAIN_METADATA_TITLE:
+        field = def->title;
+        break;
+
+    case VIR_DOMAIN_METADATA_ELEMENT:
+        virReportError(VIR_ERR_ARGUMENT_UNSUPPORTED, "%s",
+                       _("<metadata> element is not yet supported"));
+        goto cleanup;
+        break;
+
+    default:
+        virReportError(VIR_ERR_INVALID_ARG, "%s",
+                       _("unknown metadata type"));
+        goto cleanup;
+        break;
+    }
+
+    if (!field)
+        virReportError(VIR_ERR_NO_DOMAIN_METADATA, "%s",
+                       _("Requested metadata element is not present"));
+
+    if (!(ret = strdup(field)))
+        virReportOOMError();
+
+cleanup:
+    return ret;
+}
diff --git a/src/conf/domain_conf.h b/src/conf/domain_conf.h
index 2e72afc..ce0a793 100644
--- a/src/conf/domain_conf.h
+++ b/src/conf/domain_conf.h
@@ -2437,4 +2437,10 @@ int virDomainDefFindDevice(virDomainDefPtr def,
                            virDomainDeviceDefPtr dev,
                            bool reportError);
 
+char *virDomainObjGetMetadata(virDomainObjPtr vm,
+                              int type,
+                              const char *uri,
+                              virCapsPtr caps,
+                              unsigned int flags);
+
 #endif /* __DOMAIN_CONF_H */
diff --git a/src/libvirt_private.syms b/src/libvirt_private.syms
index e44bab5..affd1d4 100644
--- a/src/libvirt_private.syms
+++ b/src/libvirt_private.syms
@@ -480,6 +480,7 @@ virDomainNumatuneMemPlacementModeTypeFromString;
 virDomainNumatuneMemPlacementModeTypeToString;
 virDomainObjAssignDef;
 virDomainObjCopyPersistentDef;
+virDomainObjGetMetadata;
 virDomainObjGetPersistentDef;
 virDomainObjGetState;
 virDomainObjIsDuplicate;
diff --git a/src/qemu/qemu_driver.c b/src/qemu/qemu_driver.c
index 094ecfe..5f98b7b 100644
--- a/src/qemu/qemu_driver.c
+++ b/src/qemu/qemu_driver.c
@@ -14933,14 +14933,12 @@ no_memory:
 static char *
 qemuDomainGetMetadata(virDomainPtr dom,
                       int type,
-                      const char *uri ATTRIBUTE_UNUSED,
+                      const char *uri,
                       unsigned int flags)
 {
     struct qemud_driver *driver = dom->conn->privateData;
     virDomainObjPtr vm;
-    virDomainDefPtr def;
     char *ret = NULL;
-    char *field = NULL;
 
     virCheckFlags(VIR_DOMAIN_AFFECT_LIVE |
                   VIR_DOMAIN_AFFECT_CONFIG, NULL);
@@ -14957,43 +14955,7 @@ qemuDomainGetMetadata(virDomainPtr dom,
         goto cleanup;
     }
 
-    if (virDomainLiveConfigHelperMethod(driver->caps, vm, &flags, &def) < 0)
-        goto cleanup;
-
-    /* use correct domain definition according to flags */
-    if (flags & VIR_DOMAIN_AFFECT_LIVE)
-        def = vm->def;
-
-    switch ((virDomainMetadataType) type) {
-    case VIR_DOMAIN_METADATA_DESCRIPTION:
-        field = def->description;
-        break;
-    case VIR_DOMAIN_METADATA_TITLE:
-        field = def->title;
-        break;
-    case VIR_DOMAIN_METADATA_ELEMENT:
-        virReportError(VIR_ERR_ARGUMENT_UNSUPPORTED, "%s",
-                       _("QEMU driver does not support "
-                         "<metadata> element"));
-        goto cleanup;
-        break;
-    default:
-        virReportError(VIR_ERR_INVALID_ARG, "%s",
-                       _("unknown metadata type"));
-        goto cleanup;
-        break;
-    }
-
-    if (!field) {
-        virReportError(VIR_ERR_NO_DOMAIN_METADATA, "%s",
-                       _("Requested metadata element is not present"));
-        goto cleanup;
-    }
-
-    if (!(ret = strdup(field))) {
-        virReportOOMError();
-        goto cleanup;
-    }
+    ret = virDomainObjGetMetadata(vm, type, uri, driver->caps, flags);
 
 cleanup:
     if (vm)
-- 
2.0.0

