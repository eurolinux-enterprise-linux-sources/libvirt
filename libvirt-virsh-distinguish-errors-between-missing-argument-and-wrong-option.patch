From c5d605cd4a9b75f8aa0e9b1591a7fbf2f238172e Mon Sep 17 00:00:00 2001
Message-Id: <c5d605cd4a9b75f8aa0e9b1591a7fbf2f238172e.1373885147.git.jdenemar@redhat.com>
From: Guannan Ren <gren@redhat.com>
Date: Fri, 5 Jul 2013 12:26:26 +0800
Subject: [PATCH] virsh: distinguish errors between missing argument and wrong
 option

Resolves: https://bugzilla.redhat.com/show_bug.cgi?id=924596
(cherry picked from commit dd71fa110a05ae480a445a75e7c454914f42789c)
Specifying ':' to suppress the error messages printed by getopt().
Then, distinguish the two types of errors.

Before:
 # virsh -c
   virsh: option requires an argument -- 'c'
   error: unsupported option '-?'. See --help.

After:
 # virsh -c
   error: option '-c' requires an argument

 # virsh -x
   error: unsupported option '-x'. See --help.
---
 tools/virsh.c | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/tools/virsh.c b/tools/virsh.c
index 0cccdf7..f7d37ea 100644
--- a/tools/virsh.c
+++ b/tools/virsh.c
@@ -2912,7 +2912,7 @@ vshParseArgv(vshControl *ctl, int argc, char **argv)
     /* Standard (non-command) options. The leading + ensures that no
      * argument reordering takes place, so that command options are
      * not confused with top-level virsh options. */
-    while ((arg = getopt_long(argc, argv, "+d:hqtc:vVrl:e:", opt, NULL)) != -1) {
+    while ((arg = getopt_long(argc, argv, "+:d:hqtc:vVrl:e:", opt, NULL)) != -1) {
         switch (arg) {
         case 'd':
             if (virStrToLong_i(optarg, NULL, 10, &debug) < 0) {
@@ -2966,8 +2966,14 @@ vshParseArgv(vshControl *ctl, int argc, char **argv)
                 exit(EXIT_FAILURE);
             }
             break;
+        case ':':
+            vshError(ctl, _("option '-%c' requires an argument"), optopt);
+            exit(EXIT_FAILURE);
+        case '?':
+            vshError(ctl, _("unsupported option '-%c'. See --help."), optopt);
+            exit(EXIT_FAILURE);
         default:
-            vshError(ctl, _("unsupported option '-%c'. See --help."), arg);
+            vshError(ctl, _("unknown option"));
             exit(EXIT_FAILURE);
         }
     }
-- 
1.8.3.2

