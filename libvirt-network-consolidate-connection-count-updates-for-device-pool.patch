From 0ff01d0e8cf44a903d042f3cec0fbb6e0c93f1bc Mon Sep 17 00:00:00 2001
Message-Id: <0ff01d0e8cf44a903d042f3cec0fbb6e0c93f1bc@dist-git>
From: Laine Stump <laine@laine.org>
Date: Mon, 15 Feb 2016 06:19:42 -0500
Subject: [PATCH] network: consolidate connection count updates for device pool

Part of fix for: https://bugzilla.redhat.com/show_bug.cgi?id=1300843

networkReleaseActualDevice() and networkNotifyActualDevice() both were
updating the individual devices' connections count in two separate
places (unlike networkAllocateActualDevice() which does it in a single
unified place after success:). The code is correct, but prone to
confusion / later breakage. All of these updates are anyway located at
the end of if/else clauses that are (with the exception of a single
VIR_DEBUG() in each case) immediately followed by the success: label
anyway, so this patch replaces the duplicated ++/-- instructions with
a single ++/-- inside a qualifying "if (dev)" down below success:.
(NB: if dev != NULL, by definition we are using a device (either pci
or netdev, doesn't matter for these purposes) from the network's pool)

The VIR_DEBUG args (which will be replaced in a followup patch anyway)
were all adjusted to account for the connection count being out of
date at the time.

(cherry pick from commit 3ea8b8b87f5c9efdf12b2a162cac072081355f63 with
two miniscule merge conflict due to an extra space preceding
"success:" upstream)

Signed-off-by: Jiri Denemark <jdenemar@redhat.com>
---
 src/network/bridge_driver.c | 22 ++++++++++------------
 1 file changed, 10 insertions(+), 12 deletions(-)

diff --git a/src/network/bridge_driver.c b/src/network/bridge_driver.c
index ac89818..cec8c7e 100644
--- a/src/network/bridge_driver.c
+++ b/src/network/bridge_driver.c
@@ -1,7 +1,7 @@
 /*
  * bridge_driver.c: core driver methods for managing network
  *
- * Copyright (C) 2006-2015 Red Hat, Inc.
+ * Copyright (C) 2006-2016 Red Hat, Inc.
  * Copyright (C) 2006 Daniel P. Berrange
  *
  * This library is free software; you can redistribute it and/or
@@ -4085,10 +4085,8 @@ networkNotifyActualDevice(virDomainDefPtr dom,
             goto error;
         }
 
-        /* we are now assured of success, so mark the allocation */
-        dev->connections++;
         VIR_DEBUG("Using physical device %s, connections %d",
-                  dev->device.dev, dev->connections);
+                  dev->device.dev, dev->connections + 1);
 
     }  else /* if (actualType == VIR_DOMAIN_NET_TYPE_HOSTDEV) */ {
         virDomainHostdevDefPtr hostdev;
@@ -4140,16 +4138,16 @@ networkNotifyActualDevice(virDomainDefPtr dom,
             goto error;
         }
 
-        /* we are now assured of success, so mark the allocation */
-        dev->connections++;
         VIR_DEBUG("Using physical device %04x:%02x:%02x.%x, connections %d",
                   dev->device.pci.domain, dev->device.pci.bus,
                   dev->device.pci.slot, dev->device.pci.function,
                   dev->connections);
     }
 
-success:
+ success:
     netdef->connections++;
+    if (dev)
+        dev->connections++;
     VIR_DEBUG("Using network %s, %d connections",
               netdef->name, netdef->connections);
 
@@ -4253,9 +4251,8 @@ networkReleaseActualDevice(virDomainDefPtr dom,
             goto error;
         }
 
-        dev->connections--;
         VIR_DEBUG("Releasing physical device %s, connections %d",
-                  dev->device.dev, dev->connections);
+                  dev->device.dev, dev->connections - 1);
 
     } else /* if (actualType == VIR_DOMAIN_NET_TYPE_HOSTDEV) */ {
         virDomainHostdevDefPtr hostdev;
@@ -4289,16 +4286,17 @@ networkReleaseActualDevice(virDomainDefPtr dom,
                 goto error;
         }
 
-        dev->connections--;
         VIR_DEBUG("Releasing physical device %04x:%02x:%02x.%x, connections %d",
                   dev->device.pci.domain, dev->device.pci.bus,
                   dev->device.pci.slot, dev->device.pci.function,
-                  dev->connections);
-   }
+                  dev->connections - 1);
+    }
 
  success:
     if (iface->data.network.actual) {
         netdef->connections--;
+        if (dev)
+            dev->connections--;
         VIR_DEBUG("Releasing network %s, %d connections",
                   netdef->name, netdef->connections);
 
-- 
2.7.1

