From d04befd19366585bd73d82678d92610c812132a7 Mon Sep 17 00:00:00 2001
Message-Id: <d04befd19366585bd73d82678d92610c812132a7@dist-git>
From: Martin Kletzander <mkletzan@redhat.com>
Date: Fri, 3 Apr 2015 18:50:12 +0200
Subject: [PATCH] qemu: Migrate memory on numatune change

We've never set the cpuset.memory_migrate value to anything, keeping it
on default.  However, we allow changing cpuset.mems on live domain.
That setting, however, don't have any consequence on a domain unless
it's going to allocate new memory.

I managed to make 'virsh numatune' move all the memory to any node I
wanted even without disabling libnuma's numa_set_membind(), so this
should be safe to use with it as well.

Resolves: https://bugzilla.redhat.com/show_bug.cgi?id=1198497

Signed-off-by: Martin Kletzander <mkletzan@redhat.com>
(cherry picked from commit 3a0e5b0c20815f986ac434e3df67f56d5d1aa44c)
Signed-off-by: Martin Kletzander <mkletzan@redhat.com>

 Conflicts:
	src/qemu/qemu_cgroup.c -- The file was completely reworked
	                          upstream, this version only works on
	                          newly started domains to eliminate any
	                          possible and unnecessary risk.

Signed-off-by: Martin Kletzander <mkletzan@redhat.com>
Signed-off-by: Jiri Denemark <jdenemar@redhat.com>
---
 src/qemu/qemu_cgroup.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/src/qemu/qemu_cgroup.c b/src/qemu/qemu_cgroup.c
index 0060bc2..173d42e 100644
--- a/src/qemu/qemu_cgroup.c
+++ b/src/qemu/qemu_cgroup.c
@@ -405,6 +405,10 @@ int qemuSetupCgroup(struct qemud_driver *driver,
         }
     }
 
+    if (qemuCgroupControllerActive(driver, VIR_CGROUP_CONTROLLER_CPUSET) &&
+        virCgroupSetCpusetMemoryMigrate(cgroup, true) < 0)
+        return -1;
+
     if ((vm->def->numatune.memory.nodemask ||
          (vm->def->numatune.memory.placement_mode ==
           VIR_DOMAIN_NUMATUNE_MEM_PLACEMENT_MODE_AUTO)) &&
-- 
2.3.5

