From 77cd9ccdc6423d32e8ffbb918181f5c7db5068eb Mon Sep 17 00:00:00 2001
Message-Id: <77cd9ccdc6423d32e8ffbb918181f5c7db5068eb.1373271638.git.jdenemar@redhat.com>
From: Osier Yang <jyang@redhat.com>
Date: Mon, 11 Mar 2013 15:26:04 +0800
Subject: [PATCH] qemu: Merge qemuCheckSharedDisk into qemuAddSharedDisk

https://bugzilla.redhat.com/show_bug.cgi?id=908073

Based on moving various checking into qemuAddSharedDisk, this
avoids the caller using it in wrong ways. Also this adds two
new checking for qemuCheckSharedDisk (disk device not 'lun'
and kernel doesn't support unpriv_sgio simply returns 0).
(cherry picked from commit 371df778ebe53e649640d6cd27027856c852e5cc)

Conflicts:
  * Conflicts with commit 8cdd5faf (Pass virQEMUDriverPtr into APIs managed
    shared disk list), which won't be backported to 6.4 for risks.

	src/qemu/qemu_conf.c
	src/qemu/qemu_driver.c
	src/qemu/qemu_process.c
	src/qemu/qemu_process.h
---
 src/qemu/qemu_conf.c    | 72 +++++++++++++++++++++++++++++++++++++++++++++++++
 src/qemu/qemu_driver.c  |  5 ----
 src/qemu/qemu_process.c | 53 ------------------------------------
 src/qemu/qemu_process.h |  3 ---
 4 files changed, 72 insertions(+), 61 deletions(-)

diff --git a/src/qemu/qemu_conf.c b/src/qemu/qemu_conf.c
index b6336b4..cfc1e37 100644
--- a/src/qemu/qemu_conf.c
+++ b/src/qemu/qemu_conf.c
@@ -769,6 +769,75 @@ qemuGetSharedDiskKey(const char *disk_path)
     return key;
 }
 
+/* Check if a shared disk's setting conflicts with the conf
+ * used by other domain(s). Currently only checks the sgio
+ * setting. Note that this should only be called for disk with
+ * block source.
+ *
+ * Returns 0 if no conflicts, otherwise returns -1.
+ */
+static int
+qemuCheckSharedDisk(virHashTablePtr sharedDisks,
+                    virDomainDiskDefPtr disk)
+{
+    int val;
+    size_t *ref = NULL;
+    char *sysfs_path = NULL;
+    char *key = NULL;
+    int ret = 0;
+
+    /* The only conflicts between shared disk we care about now
+     * is sgio setting, which is only valid for device='lun'.
+     */
+    if (disk->device != VIR_DOMAIN_DISK_DEVICE_LUN)
+        return 0;
+
+    if (!(sysfs_path = virGetUnprivSGIOSysfsPath(disk->src, NULL))) {
+        ret = -1;
+        goto cleanup;
+    }
+
+    /* It can't be conflict if unpriv_sgio is not supported
+     * by kernel.
+     */
+    if (!virFileExists(sysfs_path))
+        goto cleanup;
+
+
+    if (!(key = qemuGetSharedDiskKey(disk->src))) {
+        ret = -1;
+        goto cleanup;
+    }
+
+    /* It can't be conflict if no other domain is
+     * is sharing it.
+     */
+    if (!(ref = virHashLookup(sharedDisks, key)))
+        goto cleanup;
+
+    if (virGetDeviceUnprivSGIO(disk->src, NULL, &val) < 0) {
+        ret = -1;
+        goto cleanup;
+    }
+
+    if ((val == 0 &&
+         (disk->sgio == VIR_DOMAIN_DISK_SGIO_FILTERED ||
+          disk->sgio == VIR_DOMAIN_DISK_SGIO_DEFAULT)) ||
+        (val == 1 &&
+         disk->sgio == VIR_DOMAIN_DISK_SGIO_UNFILTERED))
+        goto cleanup;
+
+    virReportError(VIR_ERR_OPERATION_INVALID,
+                   _("sgio of shared disk '%s' conflicts with other "
+                     "active domains"), disk->src);
+    ret = -1;
+
+cleanup:
+    VIR_FREE(sysfs_path);
+    VIR_FREE(key);
+    return ret;
+}
+
 /* Increase ref count if the entry already exists, otherwise
  * add a new entry.
  */
@@ -788,6 +857,9 @@ qemuAddSharedDisk(virHashTablePtr sharedDisks,
         !disk->shared || !disk->src)
         return 0;
 
+    if (qemuCheckSharedDisk(sharedDisks, disk) < 0)
+        goto cleanup;
+
     if (!(key = qemuGetSharedDiskKey(disk->src)))
         goto cleanup;
 
diff --git a/src/qemu/qemu_driver.c b/src/qemu/qemu_driver.c
index 2a99a82..4967180 100644
--- a/src/qemu/qemu_driver.c
+++ b/src/qemu/qemu_driver.c
@@ -5933,11 +5933,6 @@ qemuDomainAttachDeviceDiskLive(virConnectPtr conn,
         goto end;
     }
 
-    if (disk->type == VIR_DOMAIN_DISK_TYPE_BLOCK &&
-        disk->shared &&
-        (qemuCheckSharedDisk(driver->sharedDisks, disk) < 0))
-        goto end;
-
     if (qemuDomainDetermineDiskChain(driver, disk, false) < 0)
         goto end;
 
diff --git a/src/qemu/qemu_process.c b/src/qemu/qemu_process.c
index 4a185b8..7b6d1c5 100644
--- a/src/qemu/qemu_process.c
+++ b/src/qemu/qemu_process.c
@@ -3497,56 +3497,6 @@ qemuSetUnprivSGIO(virDomainDiskDefPtr disk)
     return 0;
 }
 
-/* Check if a shared disk's setting conflicts with the conf
- * used by other domain(s). Currently only checks the sgio
- * setting. Note that this should only be called for disk with
- * block source.
- *
- * Returns 0 if no conflicts, otherwise returns -1.
- */
-int
-qemuCheckSharedDisk(virHashTablePtr sharedDisks,
-                    virDomainDiskDefPtr disk)
-{
-    int val;
-    size_t *ref = NULL;
-    char *key = NULL;
-    int ret = 0;
-
-    if (!(key = qemuGetSharedDiskKey(disk->src)))
-        return -1;
-
-    /* It can't be conflict if no other domain is
-     * is sharing it.
-     */
-    if (!(ref = virHashLookup(sharedDisks, key)))
-        goto cleanup;
-
-    if (ref == (void *)0x1)
-        goto cleanup;
-
-    if (virGetDeviceUnprivSGIO(disk->src, NULL, &val) < 0) {
-        ret = -1;
-        goto cleanup;
-    }
-
-    if ((val == 0 &&
-         (disk->sgio == VIR_DOMAIN_DISK_SGIO_FILTERED ||
-          disk->sgio == VIR_DOMAIN_DISK_SGIO_DEFAULT)) ||
-        (val == 1 &&
-         disk->sgio == VIR_DOMAIN_DISK_SGIO_UNFILTERED))
-        goto cleanup;
-
-    virReportError(VIR_ERR_OPERATION_INVALID,
-                   _("sgio of shared disk '%s' conflicts with other "
-                     "active domains"), disk->src);
-    ret = -1;
-
-cleanup:
-    VIR_FREE(key);
-    return ret;
-}
-
 int qemuProcessStart(virConnectPtr conn,
                      struct qemud_driver *driver,
                      virDomainObjPtr vm,
@@ -3886,9 +3836,6 @@ int qemuProcessStart(virConnectPtr conn,
         if (qemuAddSharedDisk(driver->sharedDisks, disk) < 0)
             goto cleanup;
 
-        if (qemuCheckSharedDisk(driver->sharedDisks, disk) < 0)
-            goto cleanup;
-
         if (qemuSetUnprivSGIO(disk) < 0)
             goto cleanup;
     }
diff --git a/src/qemu/qemu_process.h b/src/qemu/qemu_process.h
index a7688c5..396b899 100644
--- a/src/qemu/qemu_process.h
+++ b/src/qemu/qemu_process.h
@@ -100,7 +100,4 @@ virBitmapPtr qemuPrepareCpumap(struct qemud_driver *driver,
                                virBitmapPtr nodemask);
 int qemuSetUnprivSGIO(virDomainDiskDefPtr disk);
 
-int qemuCheckSharedDisk(virHashTablePtr sharedDisks,
-                        virDomainDiskDefPtr disk);
-
 #endif /* __QEMU_PROCESS_H__ */
-- 
1.8.2.1

